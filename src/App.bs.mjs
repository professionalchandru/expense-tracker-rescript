// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as AppContext from "./Context/AppContext.bs.mjs";
import * as Caml_format from "rescript/lib/es6/caml_format.js";
import * as HistoryBlock from "./HistoryBlock.bs.mjs";
import * as BalanceAmount from "./BalanceAmount.bs.mjs";
import * as IncomeExpenseBox from "./IncomeExpenseBox.bs.mjs";
import * as TransactionBlock from "./TransactionBlock.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as AppContextProvider from "./Context/AppContextProvider.bs.mjs";
import * as ExpenseTrackerHeader from "./ExpenseTrackerHeader.bs.mjs";

function appReducer(state, action) {
  switch (action.TAG | 0) {
    case /* UpdateIncome */0 :
        var amount = action._0;
        return {
                balanceAmount: state.balanceAmount + amount,
                incomeAmount: state.incomeAmount + amount,
                expenseAmount: state.expenseAmount,
                transactionHistoryList: state.transactionHistoryList,
                addTransaction: state.addTransaction
              };
    case /* UpdateExpense */1 :
        var amount$1 = action._0;
        return {
                balanceAmount: state.balanceAmount + amount$1,
                incomeAmount: state.incomeAmount,
                expenseAmount: state.expenseAmount + amount$1,
                transactionHistoryList: state.transactionHistoryList,
                addTransaction: state.addTransaction
              };
    case /* UpdateTransaction */2 :
        return {
                balanceAmount: state.balanceAmount,
                incomeAmount: state.incomeAmount,
                expenseAmount: state.expenseAmount,
                transactionHistoryList: state.transactionHistoryList.concat([{
                        remarks: action._0,
                        amount: action._1,
                        id: Date.now()
                      }]),
                addTransaction: state.addTransaction
              };
    
  }
}

function App(props) {
  var match = React.useReducer(appReducer, AppContext.appInitialState);
  var dispatch = match[1];
  var state = match[0];
  var addTransaction = function (remarks, amount) {
    var floatAmount = Caml_format.float_of_string(amount);
    if (floatAmount < 0.0) {
      Curry._1(dispatch, {
            TAG: /* UpdateExpense */1,
            _0: floatAmount
          });
    } else {
      Curry._1(dispatch, {
            TAG: /* UpdateIncome */0,
            _0: floatAmount
          });
    }
    Curry._1(dispatch, {
          TAG: /* UpdateTransaction */2,
          _0: remarks,
          _1: amount
        });
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(ExpenseTrackerHeader.make, {}),
                JsxRuntime.jsxs(AppContextProvider.make, {
                      value: {
                        balanceAmount: state.balanceAmount,
                        incomeAmount: state.incomeAmount,
                        expenseAmount: state.expenseAmount,
                        transactionHistoryList: state.transactionHistoryList,
                        addTransaction: addTransaction
                      },
                      children: [
                        JsxRuntime.jsx(BalanceAmount.make, {}),
                        JsxRuntime.jsx(IncomeExpenseBox.make, {}),
                        JsxRuntime.jsx(HistoryBlock.make, {}),
                        JsxRuntime.jsx(TransactionBlock.make, {})
                      ]
                    })
              ],
              className: "app-background h-screen w-screen p-4 overflow-y-auto"
            });
}

var make = App;

export {
  make ,
}
/* react Not a pure module */
